on:
  push:
    branches:
      - "master"

name: "Deploy"

jobs:
  deploy:
    name: "Deploy API worker"
    runs-on: "ubuntu-latest"

    environment: "development"

    steps:
      - name: "Checkout source code"
        uses: "actions/checkout@v4"

      - name: "Install dependencies"
        run: |
          cd ./api/
          yarn install

      - name: "Configure worker name"
        run: |
          cd ./api/

          echo "" >> ./wrangler.toml
          echo "[env.production]" >> ./wrangler.toml
          echo "name = \"${{ vars.WORKER_NAME }}\"" >> ./wrangler.toml

      - name: "Configure worker variables"
        run: |
          cd ./api/

          echo "" >> ./wrangler.toml
          echo "[env.production.vars]" >> ./wrangler.toml
          echo "OAUTH_GOOGLE_CLIENT_ID = \"${{ vars.OAUTH_GOOGLE_CLIENT_ID }}\"" >> ./wrangler.toml
          echo "OAUTH_GOOGLE_CLIENT_SECRET = \"${{ secrets.OAUTH_GOOGLE_CLIENT_SECRET }}\"" >> ./wrangler.toml
          echo "OAUTH_GOOGLE_REDIRECT_URL = \"${{ vars.OAUTH_GOOGLE_REDIRECT_URL }}\"" >> ./wrangler.toml

      - name: "Configure worker AI"
        run: |
          cd ./api/

          echo "" >> ./wrangler.toml
          echo "[env.production.ai]" >> ./wrangler.toml
          echo "binding = \"AI\"" >> ./wrangler.toml

      - name: "Configure worker database"
        run: |
          cd ./api/

          echo "" >> ./wrangler.toml
          echo "[[env.production.d1_databases]]" >> ./wrangler.toml
          echo "binding = \"DB\"" >> ./wrangler.toml
          echo "database_name = \"pathmaster-dev\"" >> ./wrangler.toml
          echo "database_id = \"${{ vars.WORKER_D1_ID }}\"" >> ./wrangler.toml

      - name: "Configure worker bucket"
        run: |
          cd ./api/

          echo "" >> ./wrangler.toml
          echo "[[env.production.r2_buckets]]" >> ./wrangler.toml
          echo "bucket_name = \"pathfinder-dev\"" >> ./wrangler.toml
          echo "binding = \"pathfinder_dev\"" >> ./wrangler.toml

      - name: "Execute SQL initialization script"
        run: |
          export CLOUDFLARE_ACCOUNT_ID="${{ secrets.CLOUDFLARE_ACCOUNT_ID }}"
          export CLOUDFLARE_API_TOKEN="${{ secrets.CLOUDFLARE_API_TOKEN }}"

          cd ./api/

          yarn wrangler d1 execute \
            --env production \
            --remote \
            --file ./db/initialize.sql \
            pathmaster-dev

      - name: "Publish worker"
        run: |
          export CLOUDFLARE_ACCOUNT_ID="${{ secrets.CLOUDFLARE_ACCOUNT_ID }}"
          export CLOUDFLARE_API_TOKEN="${{ secrets.CLOUDFLARE_API_TOKEN }}"

          cd ./api/

          yarn wrangler deploy \
            --env production \
            --route "${{ vars.WORKER_ROUTE }}"

      - name: "Create mock account and session"
        run: |
          export CLOUDFLARE_ACCOUNT_ID="${{ secrets.CLOUDFLARE_ACCOUNT_ID }}"
          export CLOUDFLARE_API_TOKEN="${{ secrets.CLOUDFLARE_API_TOKEN }}"

          cd ./api/

          yarn wrangler d1 execute \
            --env production \
            --remote \
            --command "INSERT INTO account (account_id, username, email) VALUES (1, 'pathmaster', 'info@pathmaster.gg');" \
            pathmaster-dev

          CURRENT_TIME=$(date +%s)
          EXPIRATION_TIME=$((CURRENT_TIME + 3600))

          yarn wrangler d1 execute \
            --env production \
            --remote \
            --command "INSERT INTO session (session_id, type, token, create_time, expiration, account_id) VALUES (1, 2, '${{ secrets.MOCK_SESSION_TOKEN }}', $CURRENT_TIME, $EXPIRATION_TIME, 1);" \
            pathmaster-dev

      - name: "Send data initialization requests"
        run: |
          cd ./mock/

          ./init.sh "${{ secrets.MOCK_SESSION_TOKEN }}"
